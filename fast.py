from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI()
class Item(BaseModel):
    studentnumber:int

#1----------------------------------------------------------------------------------------------------------------------
@app.get("/snum/{snum}")
def snum1(snum: int):
    a1 =0
    a2 =0
    a3 =0
    a4 =0
    resp = []
    snum = str(snum)
    if 400 <= int(snum[0:3]) <= 402:
        resp.append("yippee")
    else:
        resp.append("شماره سال نادرست")
        a1 = 1
    le = int(len(snum))
    if le != 11:
        resp.append("شماره دانشجویی باید11رقم باشد.تعداد ارقام شماره دانشجویی وارد شده نادرست است")
        a2 = 1
    if int(snum[3:9]) != 114150:
        resp.append("قسمت ثابت نادرست است.")
        a3 = 1
    if 1 <= int(snum[9:11]) <= 99:
        resp.append("")
    else:
        resp.append("قسمت اندیس نادرست است. ")
        a4 = 1
    if a1 == 0 and a2 == 0 and a3 == 0 and a4 == 0:
        resp.append("شماره دانشجویی وارد شده درست است. شماره دانشجویی را برگرداند")
    return resp

@app.post("/snum1/")
def snum1(snum: Item):
    a1 =0
    a2 =0
    a3 =0
    a4 =0
    resp = []
    snum = str(snum.studentnumber)
    if 400 <= int(snum[0:3]) <= 402:
        resp.append("yippee")
    else:
        resp.append("شماره سال نادرست")
        a1 =1
    le = int(len(snum))
    if le != 11:
        resp.append("شماره دانشجویی باید11رقم باشد.تعداد ارقام شماره دانشجویی وارد شده نادرست است")
        a2 = 1
    if int(snum[3:9]) != 114150:
        resp.append("قسمت ثابت نادرست است.")
        a3 = 1
    if 1 <= int(snum[9:11]) <= 99:
        a4 += 0
    else:
        resp.append("قسمت اندیس نادرست است. ")
        a4 = 1
    if a1 == 0 and a2 == 0 and a3 == 0 and a4 == 0:
        resp.append(f"شماره دانشجویی وارد شده درست است. ")
    return resp
#2----------------------------------------------------------------------------------------------------------------------
@app.get("/name/{name}")
def name(name: str):
    a1=0;a2=0;a3=0
    count = 0
    resp=[]
    le = int(len(name))
    len1 = len(name)
    if le >10:
        resp.append("نام از ده کارکتر طولانی تر است.")
        a1=1
    for i in name:
        if i >= 'a' and i <= 'z':
            count += 1
        if i >= 'A' and i<= 'Z':
            count += 1
    if count > 0:
        resp.append("اسم خود را به فارسی وارد کنید.")
        a2=1
    if name.isalpha() == False:
        resp.append("کارکتر های ورودی باید حروف باشند.")
        a3=1
    if a1==0 and a2==0 and a3 == 0:
        resp.append("the name is available")

    return resp
#3----------------------------------------------------------------------------------------------------------------------
@app.get("/date/{a}/{b}/{c}")
def issham(a:int,b:int,c:int):
    resp = []
    co = 0
    if  b > 12:
        co +=1
    if  c > 31:
        co +=1
    if co > 0:
        resp.append("قالب سال واردی اشتباه است")
    return resp
#4----------------------------------------------------------------------------------------------------------------------
@app.get("/pass/{pasnum}")
def passy(pasnum):

    cou = 0
    resp = []
    p1 = pasnum[0:1]
    p2 = pasnum[1:7]
    p3 = pasnum[8:]

    if p2.isdigit() == False :
            cou += 1
    if p1==int:
        cou += 1
    if p3.isdigit() == False:
        cou += 1
    if cou != 0:
        resp.append("قالب ورودی اشتباه است.")
    return resp
#5----------------------------------------------------------------------------------------------------------------------
@app.get("/prov/{prov}")
def prov(prov:str):
    list = ["اراک" ,'اردبیل', "تبریز", 'اصفهان' , "اهواز" , 'ایلام' , "بجنورد" , 'بندرعباس' , "بوشهر" , "بیرجند" ,
            "ارومیه" , "تهران" , "خرم آباد" , "رشت" , "زاهدان" , "زنجان" , "ساری" , "سمنان" , "سنندج","شهرکرد" ,"شیراز",
            "قزوین" "قم" , "کرج" , "کرمان" , "کرمانشاه" , "گرگان" , "مشهد" , "همدان" , "یاسوج" , "یزد", ]
    if prov  not in list:
        return ("محل تولد باید از یکی مراکز استان باشد.")
#5.1----------------------------------------------------------------------------------------------------------------------
@app.get("/prov1/{prov}")
def prov1(prov:str):
    list = ["مرکزی", 'اردبیل', "آذربایجان شرقی", 'اصفهان', "خوزستان", 'ایلام', "خراسان شمالی", 'هرمزگان', "بوشهر",
            "خراسان جنوبی","آذربایجان غربی","تهران","لرستان","گیلان","سیستان و بلوچستان",
            "زنجان","مازندران","سمنان","کردستان","چهارمهال بختیاری","فارس","قزوین","قم","البرز","کرمان",
            "کرمانشاه","گلستان","خراسان رضوی","همدان","کهگیلویه و بویراحمد ","یزد"]
    if prov  not in list:
        return ("محل تولد بایداز استان های کشور باشد.")
#6----------------------------------------------------------------------------------------------------------------------
#what
#7----------------------------------------------------------------------------------------------------------------------
@app.get("/adds/{adds}")
def prov(adds:str):
    le = int(len(adds))
    if le > 100:
        return ("آدرس نباید بیشتر از 100 کازاکتر باشد.")
#8----------------------------------------------------------------------------------------------------------------------
@app.get("/post/{post}")
def postadd(post):
    resp = []
    le = int(len(post))

    if post != int and le != 10:
        return 'کد پستی صحیح نمیباشد.'
    else:
        return "کد پستی صحیح میباشد"
#9----------------------------------------------------------------------------------------------------------------------
@app.get("/phone/{numb}")
def pnumb(numb:str):
    resp= []
    le = int(len(numb))
    if numb[0:2] != '09' or le != 11 :
        resp.append("شماره وارد شده صحیح نمیباشید.")
    else:
        resp.append("شماره وارد شده صحیح میباشد.")

    return resp
#10---------------------------------------------------------------------------------------------------------------------
@app.get("/hphone/{numb}")
def hnumb(numb: str):
    cou = 0
    le = int(len(numb))
    resp = []
    list1 = ["041", '044', "045", '031', "026", '084', "077", '021', "038" , "056",
             "051", "058", "061", "024", "023", "054", "071", "028", "025", "087", "034", "083",
             "074", "017", "013", "066", "011", "086", "076", "081", "035"]
    list2 = ["3", '4', '5', '8']
    if numb[0:3] not in list1 or numb[3] not in list2 :
        cou += 1
    if le != 11:
        cou += 1
    if cou==0:
        resp.append('شماره وارد شده صحیح است.')
    if cou !=0:
        resp.append('شماره وارد شده صحیح نیست.')
    return resp
#11---------------------------------------------------------------------------------------------------------------------
@app.get("/college/{name}")
def coll(name:str):
    list= [ "فنی و مهندسی" ,'علوم پایه','علوم انسانی','دامپزشکی','اقتصاد','کشاورزی','منابع طبیعی']
    if name not in list:
        return 'دانشکده غیر مجاز است.'

    else:
        return 'دانشکده انتخاب شد.'
#12---------------------------------------------------------------------------------------------------------------------
@app.get("/fos/{fos}")
def fos(fos:str):
    foslist = ["مهندسی عمران","مهندسی مکانیک","مهندسی برق","مهندسی صنایع",
    "مهندسی شیمی","مهندسی مواد","مهندسی پزشکی","مهندسی هوافضا","مهندسی کامپیوتر","مهندسی مخازن نفت",
    "مهندسی معدن","مهندسی زلزله‌شناسی","مهندسی محیط‌زیست","مهندسی هیدرولیک","مهندسی مکاترونیک","مهندسی هسته‌ای",
    "مهندسی خودرو","مهندسی رباتیک",]
    if fos  in foslist:
        return 'رشته مورد نظر انتخاب شد.'
    else:
        return 'رشته مورد نظر وجود ندارد.'
#13---------------------------------------------------------------------------------------------------------------------
@app.get("/state/{state}")
def mrstate(state:str):
    list = ["مجرد" , 'متاهل']
    if state in list:
        return 'وضعیت تاهل ثبت شد.'
    else:
        return 'وضعیت ورودی معتبر نیست.'
#14---------------------------------------------------------------------------------------------------------------------
@app.get("/meli/{code}")
def codemel(code):
    l = len(code)
    sum = 0
    for i in range(0, l - 1):
        c = ord(code[i])
        c -= 48
        sum = sum + c * (l - i)
    r = sum % 11
    c = ord(code[l - 1])
    c -= 48
    if r > 2:
        r = 11 - r
    if r == c:
        return "کد ثبت شد."
    else:
        return "کد معتبر نیست."

